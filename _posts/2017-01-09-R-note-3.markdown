---
layout:     post
title:      "R语言学习笔记「简单数据处理分析篇」"
subtitle:   "R语言学习笔记"
date:       2017-02-15
author:     "Xu Zhixun"
header-img: "img/post-bg-unix-linux.jpg"
tags:
    - 笔记
    - R语言
    - 数据
---

#### 数据导入

数据分析处理的第一件事就是选择合适的工具来导入Excel数据为数据框的数据结构。

在R中有很多读取Excel文件的函数，最常用的有XLConnect和openxlsx两个工具包。其中，openxlsx对于大数据量的文件处理起来更加从容。

```R
install.packages("openxlsx")
library("openxlsx")
```

使用openxlsx进行Excel数据，需要指明Excel的路径，以及数据所在的工作表名称。

```R
readFilePath <- "C:/Users/xuzhi/Documents/R/project/简单数据处理和分析/朝阳医院2016年销售数据.xlsx"
excelData <- read.xlsx(readFilePath,"Sheet1")
```

#### 数据预处理

##### 1. 列名重命名

国内大部分Excel数据的列名为中文，不利于编码操作与分析，一般需要更改为英文命名。使用names()函数可实现列重命名，函数中依次以重命名后的名称作为参数即可。

```R
names(excelData) <- c("time","cardno",
                      "drugId","drugName",
                      "saleNumber","virtualmoney",
                      "actualmoney")
```

##### 2. 删除缺失数据

数据可能因不同原因，产生数据不完整的情况，有些字段会为空。首先要将缺失数据去除。删除缺失数据的常用函数有na()，na.omit()可删除所有含有缺失数据的行。

实际操作中可通过逻辑运算符，精准删除需要去除的数据行。这里删除时间为空的数据行。

```R
excelData <- excelData[!is.na(excelData$time),]
```

##### 3. 字符串处理（日期为例）

本例所用Excel数据中有一列为日期，我们只需要年月日信息即可，可以删除原始数据中的星期数据。这个问题的本质是字符串处理，需要用R语言字符串处理包stringr。

使用str_split_fixed()函数对字符串进行拆分：

```R
timeSplit <- str_split_fixed(excelData$time, " ",n=2)
```

将拆分后的前半部分字符串赋值给日期列数据：

```R
excelData$time <-timeSplit[,1]
```

使用as.Date()函数将字符串转化为日期格式：

```R
excelData$time <- as.Date(excelData$time, "%Y-%m-%d")
```

数据类型的查看，可以使用class()函数进行，如`class(excelData$time)`

使用as.numric()函数将销售数据里的数字由字符串格式转换成数值类型：

```R
#销售数量
excelData$saleNumber <- as.numeric(excelData$saleNumber)
#应收金额（打折前的金额）
excelData$virtualmoney <- as.numeric(excelData$virtualmoney)
#实收金额（打折后的金额）
excelData$actualmoney <- as.numeric(excelData$actualmoney)
```

##### 4. 数据排序

使用order()函数可进行排序，decreasing用于指定升序或降序。

```R
#按销售时间对数据进行升序排序
excelData <- excelData[order(excelData$time,
                             decreasing = FALSE),]
```

#### 简单数据分析

##### 1. 月均消费次数=总消费次数/月份数

其中，同一天内，同一个人发生的消费仅算作一次。所以首先去除重复消费次数，获取总消费次数。所以，时间与社保卡号相同的数据中，仅保留一行数据，删除其他数据。

使用duplicated()函数选出数据框中重复数据并用逻辑非去除。

```R
kpi1 <- excelData[!duplicated(
                  excelData[,c("time","cardno")]
                  ),]
```

使用nrow()函数，计算kpi1中有多少条记录，以表示总消费次数。

```R
#总消费次数
consumeNumber <- nrow(kpi1)
```

月份获取

```R
#最小的时间值
startTime <- kpi1$time[1]
#最大的时间值
endTime <- kpi1$time[nrow(kpi1)]

#天数
day <- as.numeric(endTime -startTime)
#月份数
#如果你想计算的更准确，可以将一个月有31天或者28天的情况也考虑进去。这里为了简单说明计算方式，没有考虑复杂的情况。
month <- day %/% 30
```

计算结果

```R
#月均消费次数
monthConsume <- consumeNumber / month
```

##### 2. 月均消费金额=总消费金额/月份数

总消费金额用sum()函数，na.rm参数用于移除缺失值。

```R
totalMoney <- sum(excelData$actualmoney,na.rm=TRUE)
monthMoney <- totalMoney / month
```

##### 3. 客单价=总消费金额/总消费次数

```R
pct <- totalMoney / consumeNumber
```

##### 4. 消费趋势（曲线）

以每周为单位绘制散点图或曲线图。首先用tapply()函数进行分组。

```R
week <- tapply(excelData$actualmoney, 
               format(excelData$time, "%Y-%U"), 
               sum) 
```

将分组后数据转换为数据框格式，并重命名。

```
week <- as.data.frame.table(week)

names(week) <- c("time","actualmoney")

week$time <- as.character(week$time)
week$timeNumber <- c(1:nrow(week))
```

用plot()函数绘制曲线。

```R
plot(week$timeNumber, week$actualmoney,
     xlab="时间（年份-第几周）",
     ylab="消费金额",     
     xaxt = "n",
     main= "2016年朝阳医院消费曲线", 
     col="blue",
     type="b")

axis(1,at=week$timeNumber, labels=week$time, cex.axis = 1.5)
```







